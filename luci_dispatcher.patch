--- dispatcher.uc	2023-08-12 12:25:48.826140000 +0000
+++ dispatcher.new.uc	2023-08-12 12:24:40.182703100 +0000
@@ -342,6 +342,107 @@
 	return hashval;
 }
 
+function syslog2(prio, msg) {
+	warn(sprintf("[%s] %s\n", prio, msg));
+}
+
+function dump2file(fn, data) {
+	let fd = open(fn, 'w', 0600);
+	fd.write(data);
+	fd.close();
+}
+
+let aux_data = "_empty_";
+
+function aux_menu(menu) {
+	//dump2file("/tmp/menu1.json", menu);
+	try {
+		if (menu.children.admin == null) {
+			return menu
+		}
+		if (menu.children.admin.children == null) {
+			return menu
+		}
+	}
+	catch {
+		return menu;
+	}
+	//syslog2("info", "aux_menu: 001");
+	
+	if (aux_data == "_empty_") {
+		aux_data = read_jsonfile("/usr/share/luci/aux_menu.json", null);
+	}
+	if (type(aux_data) != 'object') {
+		return menu;
+	}
+	
+	for (let nm_name, nm_v in aux_data) {
+		//syslog2("info", sprintf("%s = '%s'", nm_name, nm_v));
+		let nm_title = nm_v.title;
+		let nm_order = nm_v.order;
+		let nm_items = nm_v.items;
+		//syslog2("info", sprintf("aux_menu: first menu = '%s' '%s' %d", nm_name, nm_title, nm_order));
+		
+		let nm = menu.children.admin.children[nm_name];
+		if (nm != null) {
+			if (nm.action.type != 'firstchild') {
+				syslog2("error", sprintf("aux_menu: ERROR: incorrect '%s' menu type!", nm_name));
+				return menu;
+			}
+			//syslog2("info", sprintf("aux_menu: '%s' menu already exist!", nm_name));
+			nm.satisfied = true;
+			nm.title = nm_title;
+			nm.order = nm_order;
+			nm.action.recurse = true;
+		} else {
+			//syslog2("error", "aux_menu: NAS menu NOT founded!");
+			nm = {
+				satisfied: true,
+				title: nm_title,
+				order: nm_order,
+				action: {
+					type: 'firstchild',
+					recurse: true
+				},
+				children: {}
+			};
+		}		
+		for (let order, v in nm_items) {
+			let k = v[1];
+			//syslog2("info", sprintf("aux_menu: %d = %s", order, k));
+			//syslog2("info", sprintf("    '%s'", nm.children[k]));
+			if (nm.children[k]) {
+				//submenu already exist. Skip
+				nm.children[k].order = order + 1;
+			} else if (length(v) > 1) {
+				let k1 = v[0];
+				let k2 = v[1];
+				if (menu.children.admin.children[k1]) {
+					if (menu.children.admin.children[k1].children[k2]) {
+						nm.children[k] = menu.children.admin.children[k1].children[k2];
+						nm.children[k].order = order + 1;
+						if (nm.children[k].action.path) {
+							//syslog2("info", sprintf("aux_menu: key = '%s' orig path = %s", k, nm.children[k].action.path));
+							let p = split(nm.children[k].action.path, "/");
+							//syslog2("info", sprintf("aux_menu: %s", p));
+							if (length(p) > 2 && p[0] == "admin" && p[1] == k1) {
+								p[1] = nm_name;
+								p[2] = k;
+								nm.children[k].action.path = join("/", p);
+								//syslog2("info", sprintf("aux_menu: %s = %s (%d)", k, nm.children[k].action.path, length(p)));
+							}
+						}
+						delete menu.children.admin.children[k1].children[k2];
+					}
+				}
+			}
+		}
+		menu.children.admin.children[nm_name] = nm;
+	}
+	//dump2file("/tmp/menu2.json", menu);
+	return menu;
+}
+
 function build_pagetree() {
 	let tree = { action: { type: 'firstchild' } };
 
@@ -437,6 +538,7 @@
 
 function menu_json(acl) {
 	tree ??= build_pagetree();
+	tree = aux_menu(tree);
 
 	if (acl)
 		apply_tree_acls(tree, acl);
